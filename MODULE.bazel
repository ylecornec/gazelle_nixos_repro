module(
    name = "gazelle_nixos_repro",
    version = "0.1",
)

bazel_dep(
    name = "rules_nixpkgs_core",
    version = "0.9.0",
)

archive_override(
    module_name = "rules_nixpkgs_core",
    integrity = "sha256-yxAwphNPYl4tMNKjTc/nlgFXriHsjyDCsa2wZl94n1A=",
    strip_prefix = "rules_nixpkgs-4dddbafba508cd2dffd95b8562cab91c9336fe36/core",
    urls = ["https://github.com/tweag/rules_nixpkgs/archive/4dddbafba508cd2dffd95b8562cab91c9336fe36.tar.gz"],
)

bazel_dep(
    name = "rules_nixpkgs_go",
    version = "0.9.0",
)

archive_override(
    module_name = "rules_nixpkgs_go",
    integrity = "sha256-yxAwphNPYl4tMNKjTc/nlgFXriHsjyDCsa2wZl94n1A=",
    strip_prefix = "rules_nixpkgs-4dddbafba508cd2dffd95b8562cab91c9336fe36/toolchains/go",
    urls = ["https://github.com/tweag/rules_nixpkgs/archive/4dddbafba508cd2dffd95b8562cab91c9336fe36.tar.gz"],
)

bazel_dep(
    name = "rules_go",
    version = "0.39.0",
    repo_name = "io_bazel_rules_go",
)

# rules_go with the `custom` tag.
# https://github.com/ylecornec/rules_go/tree/ylecornec/go_sdk_custom_tag
archive_override(
    module_name = "rules_go",
    integrity = "sha256-JFbSJ0BW43CMSvPZcam5LgcNBolAnVSJNpqV2UgaIkk=",
    strip_prefix = "rules_go-735d813c4875b5db1144392412181416ea486e38",
    urls = ["https://github.com/ylecornec/rules_go/archive/735d813c4875b5db1144392412181416ea486e38.tar.gz"],
)

bazel_dep(
    name = "platforms",
    version = "0.0.5",
)

bazel_dep(
    name = "bazel_skylib",
    version = "1.0.3",
)

bazel_dep(
    name = "gazelle",
    version = "0.30.0",
)

# Make gazelle use go_host_compatible_sdk to bootstrap
# https://github.com/ylecornec/bazel-gazelle/tree/ylecornec/go_host_compatible_sdk
archive_override(
    module_name = "gazelle",
    integrity = "sha256-9nnfLwQts4sJ81ASgcx7jdL0yY+ailrzny0hrYivffk=",
    strip_prefix = "bazel-gazelle-e2694ae73db07c122db2133e2499892c6c5174d2",
    urls = ["https://github.com/ylecornec/bazel-gazelle/archive/e2694ae73db07c122db2133e2499892c6c5174d2.tar.gz"],
)

################################
# Go dependencies for buildifier
################################

go_deps = use_extension("@gazelle//:extensions.bzl", "go_deps")

use_repo(
    go_deps,
    "com_github_gogo_protobuf",
    "com_github_golang_mock",
    "org_golang_google_genproto",
    "org_golang_google_grpc",
    "org_golang_google_protobuf",
    "org_golang_x_net",
    "com_github_golang_protobuf",
    "org_golang_x_tools",
)

##########################################################
# Declare and register a go toolchain using rules_nixpkgs.
# This toolchain will only be selected if the platform has the supports_nix constraint.
# Defined here https://github.com/tweag/rules_nixpkgs/blob/master/core/constraints/BUILD.bazel#L5-L8
##########################################################

non_modules_deps = use_extension("//:non_module_deps.bzl", "non_module_deps")

use_repo(non_modules_deps, "nixpkgs_go_sdk_toolchains")

use_repo(non_modules_deps, "nixpkgs_default")

use_repo(non_modules_deps, "nixpkgs_go_sdk")

register_toolchains("@nixpkgs_go_sdk_toolchains//:all")

##################################################################################
# Register a downloaded toolchain using rules_go (that is incompatible with NixOS)
##################################################################################

go_sdk = use_extension("@io_bazel_rules_go//go:extensions.bzl", "go_sdk")

go_sdk.download(
    name = "downloaded_sdk",
    goarch = "amd64",
    goos = "linux",
    version = "1.19.7",
)

######################################################################################
# Declare the nix toolchain to be considered when generating `go_host_compatible_sdk`.
######################################################################################

custom_go_toolchains = use_extension(":custom_go_toolchains.bzl", "custom_go_toolchains")

use_repo(custom_go_toolchains, "nix_custom_toolchain")

go_sdk.custom(custom_toolchain_bzl_file = "@nix_custom_toolchain//:go_toolchain.bzl")
